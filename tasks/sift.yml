---

## used as samba guest
- user: name=sansforensics password=forensics group=admin update_password=on_create

- name: adding SIFT repository
  apt_repository: repo='ppa:sift/stable' state=present
  when: ansible_distribution == 'Ubuntu'

- name: adding Ubuntu Tweak repository
  apt_repository: repo='ppa:tualatrix/ppa' state=present
  when: ansible_distribution == 'Ubuntu'

- name: adding Gift stable repository
  apt_repository: repo='ppa:gift/stable' state=present
  when: ansible_distribution == 'Ubuntu'

- include: elasticsearch.yml

# These repositories are needed, but are disabled on some Ubuntu 14.04 base builds, so enable them.
- name: Enabling Universe repository
  apt_repository: repo='deb http://archive.ubuntu.com/ubuntu trusty universe' state=present
  when: ansible_distribution == 'Ubuntu'
- replace: dest=/etc/apt/sources.list regexp='^#(\.*)multiverse$' replace='\1multiverse' backup=yes
  when: ansible_distribution == 'Ubuntu'
# Some 64-bit systems are not configured to support i386 packages. Let's make sure they are enabled. (done in main.yml)
#- name: Ensure both i386/x86_64 architecture support for packages
#  command: dpkg --add-architecture i386
#- command: ldconfig


- name: SIFT | accept Microsoft EULA for ttf-mscorefonts-installer
  debconf: name=ttf-mscorefonts-installer question='msttcorefonts/accepted-mscorefonts-eula' value=true vtype='select'

- name: SIFT | packages install
  apt: name={{item}} state=present update_cache=yes
  with_items:
    - python-software-properties
    - aeskeyfind
    - afflib-tools
    - afterglow
    - aircrack-ng
    - arp-scan
    - autopsy
    - apache2
    - bitpim
    - bitpim-lib
    - bless
    - blt
    - build-essential
    - bulk-extractor
    - cabextract
    - clamav
    - cryptsetup
    - dc3dd
    - dconf-tools
    - dumbpig
    - e2fslibs-dev
    - ent
    - epic5
    - etherape
    - exif
    - extundelete
    - f-spot
    - fdupes
    - flare
    - flasm
    - flex
    - foremost
    - g++
    - gcc
## Keep same setting than remnux for gdb
#    - gdb
    - gdb-minimal
    - ghex
    - gthumb
    - graphviz
    - hexedit
    - htop
    - hydra
    - hydra-gtk
    - ipython
    - kdiff3
    - kpartx
    - libafflib0
    - libafflib-dev
    - libbde
    - libbde-tools
    - libesedb
    - libesedb-tools
    - libevt
    - libevt-tools
    - libevtx
    - libevtx-tools
    - libewf
    - libewf-dev
    - libewf-python
    - libewf-tools
    - libfuse-dev
    - libfvde
    - libfvde-tools
    - liblightgrep
    - libmsiecf
    - libnet1
    - libolecf
    - libparse-win32registry-perl
    - libregf
    - libregf-dev
    - libregf-python
    - libregf-tools
    - libssl-dev
    - libtext-csv-perl
    - libvshadow
    - libvshadow-dev
    - libvshadow-python
    - libvshadow-tools
    - libxml2-dev
    - maltegoce
    - md5deep
    - nbd-client
## ensure same choice between netcat and netcat-traditional inside {sift,remnux.yml}
    - netcat
    - netpbm
    - nfdump
    - ngrep
    - ntopng
    - okular
    - openjdk-6-jdk
    - p7zip-full
    - phonon
    - pv
    - pyew
    - python
    - python-dev
    - python-pip
    - python-flowgrep
    - python-nids
    - python-ntdsxtract
    - python-pefile
    - python-plaso
    - python-qt4
    - python-tk
    - python-volatility
    - pytsk3
    - rsakeyfind
    - safecopy
    - sleuthkit
    - ssdeep
    - ssldump
    - stunnel4
    - tcl
    - tcpflow
    - tcpstat
    - tcptrace
    - tofrodos
    - transmission
#    - unity-control-center
## msg: No package matching 'unrar' is available
#   - unrar
    - unrar-free
    - upx-ucl
    - vbindiff
    - virtuoso-minimal
    - winbind
    - wine
    - wireshark
    - xmount
    - zenity
    - regripper
    - cmospwd
    - ophcrack
    - ophcrack-cli
    - bkhive
    - samdump2
    - cryptcat
    - outguess
    - bcrypt
    - ccrypt
    - readpst
    - ettercap-graphical
    - driftnet
    - tcpreplay
    - tcpxtract
    - tcptrack
    - p0f
    - netwox
    - lft
    - netsed
    - socat
    - knocker
#    - nikto
    - nbtscan
    - python-yara
    - gzrt
    - testdisk
    - scalpel
    - qemu
    - qemu-utils
    - gddrescue
    - dcfldd
    - vmfs-tools
    - mantaray
    - python-fuse
    - samba
    - open-iscsi
    - curl
    - git
    - system-config-samba
    - libpff
    - libpff-dev
    - libpff-tools
    - libpff-python
    - xfsprogs
    - gawk
    - exfat-fuse
    - exfat-utils
    - xpdf
    - feh
    - pyew
## note: radare and radare-gtk conflict each other...
    - radare
#    - radare-gtk
    - radare2
    - tcpick
    - pdftk
    - sslsniff
    - dsniff
#    - rar
    - xdot
    - ubuntu-tweak
    - vim
    - cpanminus
## gsettings
    - libglib2.0-bin
    - unity-greeter
    - ubuntu-wallpapers
  notify:
    - Updating ClamAV Signatures

## missing dependencies in some case?
- name: Debian | gedit install
  apt: name={{item}} state=present
  with_items:
    - gedit
  ignore_errors: true

- stat: path=/usr/bin/pescan
  register: rpev
- name: Debian | pev install (only if not remnux-pev)
  apt: name={{item}} state=present
  with_items:
    - pev
  when: not rpev.stat.exists

##- name: Setting up auto-login for user {{ current_user }}
##- name: Setting up auto-login for user {{ current_user }}
##  replace: dest='/etc/lxdm/lxdm.conf' regexp={{ item.regexp }} replace={{ item.replace }}
##  with_items:
##    - { regexp: '^#\ autologin=dgod', replace: "autologin={{ current_user }}" }
##    - { regexp: '^disable=0$', replace: 'disable=1' }
#- name: Setting up auto-login for user {{ current_user }}
#  replace: dest='/etc/lxdm/lxdm.conf' regexp='^#\ autologin=dgod' replace="autologin={{ current_user }}"
#- replace: dest='/etc/lxdm/lxdm.conf' regexp='^disable=0$' replace='disable=1'

- name: Install pip packages
  pip: name={{item}} state=present
  with_items:
    - bitstring
    - rekall
    - docopt
    - python-evtx
    - python-registry
    - six
    - construct
    - pyv8
    - pefile
    - analyzeMFT
    - python-magic
    - argparse
    - unicodecsv

- name: Install perl modules
  cpanm: name={{ item }}
  with_items:
    - Net::Wigle

- include: kibana.yml

- name: Install SIFT files
  git: repo=https://github.com/sans-dfir/sift-files
       dest=/tmp/sift-files
       recursive=no
## FIXME! (if recursive=yes) Failed to init/update submodules: No submodule mapping found in .gitmodules for path 'Java_IDX_Parser'
#- command: "bash install.sh chdir=/tmp/sift-files"
#  ignore_errors: true
- include: sift-files-install.yml

- name: Create SIFT folders
  file: path="{{ item }}" state=directory mode=1775 owner={{ current_user }} group={{ current_user }}
  with_items:
    - /cases
- name: Create SIFT folders
  file: path="{{ item }}" state=directory mode=0755
  with_items:
    - /mnt/usb
    - /mnt/vss
    - /mnt/shadow
    - /mnt/windows_mount
    - /mnt/e01
    - /mnt/aff
    - /mnt/ewf
    - /mnt/bde
    - /mnt/iscsi
    - /mnt/windows_mount1
    - /mnt/windows_mount2
    - /mnt/windows_mount3
    - /mnt/windows_mount4
    - /mnt/windows_mount5
    - /mnt/ewf_mount1
    - /mnt/ewf_mount2
    - /mnt/ewf_mount3
    - /mnt/ewf_mount4
    - /mnt/ewf_mount5
- name: Create SIFT folders
  file: path="/mnt/shadow/vss{{ item }}" state=directory mode=0755
  with_items: 
    - [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 ]
- name: Create SIFT folders
  file: path="/mnt/shadow_mount/vss{{ item }}" state=directory mode=0755
  with_items:
    - [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 ]

- name: setting symlinks
  file: src="{{ item.src }}" path="{{ item.path }}" state=link
  with_items:
    - { src: '/usr/bin/vol.py', path: '/usr/bin/vol' }
    - { src: '/usr/bin/log2timeline_legacy', path: '/usr/bin/log2timeline' }
    - { src: '/usr/bin/gedit', path: '/usr/bin/kedit' }
    - { src: '/usr/bin/ewfmount', path: '/usr/bin/mount_ewf.py' }
# Fix for https://github.com/sans-dfir/sift/issues/10
    - { src: '/usr/bin/icat', path: '/usr/bin/icat-sleuthkit' }
# Fix for https://github.com/sans-dfir/sift/issues/23
    - { src: '/usr/bin/l2t_process_old.pl', path: '/usr/local/bin/l2t_process' }
    - { src: '/etc/foremost.conf', path: '/usr/local/etc/foremost.conf' }
# Fix for https://github.com/sans-dfir/sift/issues/41
    - { src: '/usr/bin/mactime', path: '/usr/local/bin/mactime-sleuthkit' }
    - { src: '/usr/bin/iscsiadm', path: '/sbin/iscsiadm' }
    - { src: '/usr/share/regripper/rip.pl', path: '/usr/local/bin/rip.pl' }

- name: disable automated package update
  lineinfile: dest=/etc/apt/apt.conf.d/10periodic regexp='^APT::Periodic::Update-Package-Lists' line='APT::Periodic::Update-Package-Lists "0";'

- hostname: name=siftworkstation

- name: ensure current user is used for samba
  replace: dest=/etc/samba/smb.conf regexp='SIFT_USER' replace="{{ current_user }}"
  notify:
    - restart samba smbd
    - restart samba nmbd

- name: Set timezone variables
  replace: dest=/etc/timezone regexp='(.*)' replace={{ tz }} backup=yes
  notify:
    - update timezone

- stat: path=/root/.dos2unix_regripper
  register: d2u_rr
- name: Fixing Regripper Files
  shell: "dos2unix -ascii /usr/share/regripper/*"
  when: not d2u_rr.stat.exists
- file: path=/root/.dos2unix_regripper state=touch
  when: not d2u_rr.stat.exists
- stat: path=/usr/share/regripper/plugins/usrclass-all
  register: rrusr
- stat: path=/usr/share/regripper/plugins/ntuser-all
  register: rrnt
- command: mv /usr/share/regripper/plugins/usrclass-all /usr/share/regripper/plugins/usrclass
  when: rrusr.stat.exists
- command: mv /usr/share/regripper/plugins/ntuser-all /usr/share/regripper/plugins/ntuser
  when: rrnt.stat.exists
- file: path="/usr/share/regripper/rip.pl" mode=0775
- command: chmod -R 755 /usr/share/regripper/plugins

- name: Setting noclobber for {{ current_user }} and root
  lineinfile: dest="{{ item }}" regexp='^set -o noclobber' line='set -o noclobber'
  with_items:
    - "/home/{{ current_user }}/.bashrc"
    - /root/.bashrc
- name: Configuring Aliases for {{ current_user }} and root
  lineinfile: dest="{{ item }}" regexp='^alias mountwin=' line='alias mountwin="mount -o ro,loop,show_sys_files,streams_interface=windows"' create=yes
  with_items:
    - "/home/{{ current_user }}/.bash_aliases"
    - /root/.bash_aliases

- name: Sanity check for Desktop folder
  file: path="/home/{{ current_user }}/Desktop" state=directory mode=0700

- name: Setting up useful links on {{ current_user }} Desktop
  file: src="{{ item.src }}" path="{{ item.path }}" state=link
  with_items:
    - { src: '/cases', path: "/home/{{ current_user }}/Desktop/cases" }
    - { src: '/mnt', path: "/home/{{ current_user }}/Desktop/mount_points" }

## FIXME! not idempotent
#- name: Cleaning up broken symlinks on Desktop
#  command: "find -L /home/{{ current_user }}/Desktop -type l -delete"

- name: Adding all SIFT Resources to Desktop
  file: src="{{ item }}" path="/home/{{ current_user }}/Desktop" state=link
  with_fileglob:
    - /usr/share/sift/resources/*.pdf

- name: Add extra device loop backs
  lineinfile: dest=/etc/rc.local regexp='seq 8 100' line='for i in `seq 8 100`; do mknod /dev/loop$i b 7 $i; done'

## Manual or alternative
## https://github.com/jistr/ansible-gsetting
## https://github.com/JBKahn/provisioning-local/tree/master/ansible_modules/{dconf,gconftool-2,gsettings}
- name: SIFT VM Configuration Function
  command: "{{ item }}"
  with_items:
    - "sudo -u {{ current_user }} gsettings set org.gnome.desktop.background picture-uri file:///usr/share/sift/images/forensics_blue.jpg"
## stderr: No such schema 'com.canonical.Unity.Launcher'
    - "sudo -u {{ current_user }}  gsettings set com.canonical.Unity.Launcher favorites \"['application://nautilus.desktop', 'application://gnome-terminal.desktop', 'application://firefox.desktop', 'application://gnome-screenshot.desktop', 'application://gcalctool.desktop', 'application://bless.desktop', 'application://autopsy.desktop', 'application://wireshark.desktop']\""
  ignore_errors: true
- command: gsettings set com.canonical.unity-greeter background file:///usr/share/sift/images/forensics_blue.jpg
  when: ansible_distribution_version == '12.04'

- name: Autostart folder
  file: path="{{ item }}" state=directory mode=0700 owner={{ current_user }} group={{ current_user }}
  with_items:
    - "/home/{{ current_user }}/.config/autostart"

- stat: path=/usr/share/sift/other/gnome-terminal.desktop
  register: gtd
- command: "rsync -ci --chown={{ current_user }} /usr/share/sift/other/gnome-terminal.desktop /home/{{ current_user }}/.config/autostart/gnome-terminal.desktop"
  register: rsync_result
  changed_when: 'rsync_result.stdout != ""'
  when: gtd.stat.exists
- stat: path=/usr/share/unity-greeter/logo.png.ubuntu
  register: logoubuntu
- command: "rsync -ci --chown={{ current_user }} /usr/share/unity-greeter/logo.png /usr/share/unity-greeter/logo.png.ubuntu"
  register: rsync_result
  changed_when: 'rsync_result.stdout != ""'
  when: not logoubuntu.stat.exists
- command: "rsync -ci --chown={{ current_user }} /usr/share/sift/images/login_logo.png /usr/share/unity-greeter/logo.png"
  register: rsync_result
  changed_when: 'rsync_result.stdout != ""'
  when: not logoubuntu.stat.exists
- file: src=/usr/share/sift/images/forensics_blue.jpg dest=/usr/share/backgrounds/warty-final-ubuntu.png mode=0644 state=link force=yes


